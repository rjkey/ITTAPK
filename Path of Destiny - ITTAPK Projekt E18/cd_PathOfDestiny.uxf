<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1120</x>
      <y>265</y>
      <w>145</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
OpponentFactory
--
+ OpponentFactory()
+ ~OpponentFactory()
+ getOpponent(): std::unique_ptr&lt;Opponent&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1135</x>
      <y>350</y>
      <w>115</w>
      <h>145</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
Opponent
--
# name_: std::string
# health_: HP
# attack_: ATT
# defence_: DEF
# weapon_: Gear&lt;ATT&gt;
# armour_: Gear&lt;DEF&gt;
--
+ ~Opponent()
+ virtual getName(): std::string
+ virtual getHealth(): HP
+ virtual getAttack(): ATT
+ virtual getDefence(): DEF
+ virtual getWeapon(): Gear&lt;ATT&gt;
+ virtual getArmour(): Gear&lt;DEF&gt;
+ virtual setHealth(HP): void
+ virtual showStats(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>960</x>
      <y>575</y>
      <w>210</w>
      <h>115</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
Monster
--
+ Monster()
+ ~Monster
+ getName(): std::string
+ getHealth(): HP
+ getAttack(): ATT
+ getDefence(): DEF
+ getWeapon(): Gear&lt;ATT&gt;
+ getArmour(): Gear&lt;DEF&gt;
+ setHealth(HP): void
+ showStats(): void
--
&lt;&lt;friend&gt;&gt; operator&lt;&lt;(std::ostream&amp;, const Monster&amp;): std::ostream&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1205</x>
      <y>575</y>
      <w>215</w>
      <h>115</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
Humanoid
--
+ Humanoid()
+ ~Humanoid()
+ getName(): std::string
+ getHealth(): HP
+ getAttack(): ATT
+ getDefence(): DEF
+ getWeapon(): Gear&lt;ATT&gt;
+ getArmour(): Gear&lt;DEF&gt;
+ setHealth(HP): void
+ showStats(): void
--
&lt;&lt;friend&gt;&gt; operator&lt;&lt;(std::ostream&amp;, const Humanoid&amp;): std::ostream&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1060</x>
      <y>490</y>
      <w>140</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>260.0;10.0;260.0;100.0;10.0;100.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1185</x>
      <y>490</y>
      <w>135</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;250.0;100.0;250.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1185</x>
      <y>310</y>
      <w>15</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>325</x>
      <y>675</y>
      <w>110</w>
      <h>135</h>
    </coordinates>
    <panel_attributes>typename: T
&lt;&lt;class&gt;&gt;
Gear
--
- weapon_armor_: T
- name_: std::string
- random_number(): size_t
--
+ Gear()
+ Gear(T)
+ Gear(std::string, T)
+ Gear(const Gear&amp;)
+ Gear(Gear&amp;&amp;)
+ getValue(): T
+ printGear(): void
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>540</x>
      <y>370</y>
      <w>200</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
Path
--
- areaName_: std::string
- DirectionsToGo_: std::string
- directions_: int
--
+ Path()
+ Path(std::string, uint)
+ ~Path()
+ setDirectionsToGo(uint): void
+ getDirectionsToGo(): std::string
+ show(): void
+ getValue(): int
--
&lt;&lt;friend&gt;&gt; operator&lt;&lt;(std::ostream&amp;, const Path&amp;): std::ostream&amp; </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>780</x>
      <y>370</y>
      <w>205</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>typename: T
&lt;&lt;class&gt;&gt;
Arena
--
- areaName_: std::string
- combatmodifier_: T
--
+ Arena()
+ Arena(std::string, T)
+ ~Arena()
+ getCombatModifier(): T
+ show(): void
--
&lt;&lt;friend&gt;&gt; operator&lt;&lt;(std::ostream&amp;, const Arena&amp;): std::ostream&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>725</x>
      <y>265</y>
      <w>70</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
LocationFactory
--
+ LocationFactory()
+ ~LocationFactory()
+ Path createPath()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>500</x>
      <y>685</y>
      <w>95</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>typename: T
typename: Tag
typename: Operations
&lt;&lt;class&gt;&gt;
CosTypes
--
- value_: T
--
+ SafeType()
+ SafeType(T)
+ get(): T
+ set(T&amp;&amp;): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>245</x>
      <y>255</y>
      <w>205</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
Hero
--
- heroName_: std::string
- health_: HP
- attack_: ATT
- defence_: DEF
- inventoryList_: std::list&lt;GearVariant&gt;
- weapon_: Gear&lt;ATT&gt;
- armour_: Gear&lt;DEF&gt;
--
+ Hero()
+ Hero(std::string, HP, ATT, DEF)
+ ~Hero()
+ getHealth(): HP
+ getAttack(): ATT
+ getDefence(): DEF
+ getName(): std::string
+ setHealth(HP): void
+ setAttack(ATT): void
+ setDefence(DEF): void
+ addGearToInventory: void
+ changeGear(uint): void
+ dropGear(uint): void
+ setGear(GearVariant): void
+ show(): void
+ showStats(): void
+ showInventory: bool
--
&lt;&lt;friend&gt;&gt; operator&lt;&lt;(std::ostream&amp;, const Hero&amp;): std::ostream&amp;


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>660</x>
      <y>90</y>
      <w>210</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
PathOfDestiny
--
- locationFactory_: LocationFactory
- opponentFactory_: OpponentFactory
- currentLocation_: std::variant&lt;Arena&lt;DEF&gt;, Arena&lt;ATT&gt;, Path&gt;
- newLocation_: std::variant&lt;Arena&lt;DEF&gt;, Arena&lt;ATT&gt;, Path&gt;
- hero_: Hero
--
+ PathOfDestiny()
+ PathOfDestiny(Hero)
+ ~PathOfDestiny()
+ gameLogic(): void
+ movement(): void</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
