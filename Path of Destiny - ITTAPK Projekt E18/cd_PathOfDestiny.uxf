<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>9</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1296</x>
      <y>360</y>
      <w>261</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
OpponentFactory
--
+ OpponentFactory()
+ ~OpponentFactory()
+ getOpponent(): std::unique_ptr&lt;Opponent&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1323</x>
      <y>522</y>
      <w>207</w>
      <h>261</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
Opponent
--
# name_: std::string
# health_: HP
# attack_: ATT
# defence_: DEF
# weapon_: Gear&lt;ATT&gt;
# armour_: Gear&lt;DEF&gt;
--
+ ~Opponent()
+ virtual getName(): std::string
+ virtual getHealth(): HP
+ virtual getAttack(): ATT
+ virtual getDefence(): DEF
+ virtual getWeapon(): Gear&lt;ATT&gt;
+ virtual getArmour(): Gear&lt;DEF&gt;
+ virtual setHealth(HP): void
+ virtual showStats(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1017</x>
      <y>918</y>
      <w>378</w>
      <h>207</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
Humanoid
--
+ Humanoid()
+ ~Humanoid
+ getName(): std::string
+ getHealth(): HP
+ getAttack(): ATT
+ getDefence(): DEF
+ getWeapon(): Gear&lt;ATT&gt;
+ getArmour(): Gear&lt;DEF&gt;
+ setHealth(HP): void
+ showStats(): void
--
&lt;&lt;friend&gt;&gt; operator&lt;&lt;(std::ostream&amp;, const Humanoid&amp;): std::ostream&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1458</x>
      <y>918</y>
      <w>387</w>
      <h>207</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
Monster
--
+ Monster()
+ ~Monster()
+ getName(): std::string
+ getHealth(): HP
+ getAttack(): ATT
+ getDefence(): DEF
+ getWeapon(): Gear&lt;ATT&gt;
+ getArmour(): Gear&lt;DEF&gt;
+ setHealth(HP): void
+ showStats(): void
--
&lt;&lt;friend&gt;&gt; operator&lt;&lt;(std::ostream&amp;, const Monster&amp;): std::ostream&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1413</x>
      <y>774</y>
      <w>252</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0;260.0;90.0;260.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1413</x>
      <y>441</y>
      <w>27</w>
      <h>99</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>315</x>
      <y>873</y>
      <w>414</w>
      <h>261</h>
    </coordinates>
    <panel_attributes>template=typename: T
&lt;&lt;class&gt;&gt;
Gear
--
- weapon_armor_: T
- name_: std::string
- random_number(): size_t
--
+ Gear()
+ Gear(T)
+ Gear(std::string, T)
+ Gear(const Gear&amp;)
+ Gear(Gear&amp;&amp;)
+ getValue(): T
+ printGear(): void
--
&lt;&lt;friend&gt;&gt; operator&lt;&lt;(std::ostream&amp;, const Gear&amp;): std::ostream&amp;
&lt;&lt;friend&gt;&gt; operator==(Gear, Gear): bool
&lt;&lt;friend&gt;&gt; operator!=(Gear, Gear): bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>441</x>
      <y>549</y>
      <w>360</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
Path
--
- areaName_: std::string
- DirectionsToGo_: std::string
- directions_: int
--
+ Path()
+ Path(std::string, uint)
+ ~Path()
+ setDirectionsToGo(uint): void
+ getDirectionsToGo(): std::string
+ show(): void
+ getValue(): int
--
&lt;&lt;friend&gt;&gt; operator&lt;&lt;(std::ostream&amp;, const Path&amp;): std::ostream&amp; </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>873</x>
      <y>540</y>
      <w>414</w>
      <h>198</h>
    </coordinates>
    <panel_attributes>template=typename: T
&lt;&lt;class&gt;&gt;
Arena
--
- areaName_: std::string
- combatmodifier_: T
--
+ Arena()
+ Arena(std::string, T)
+ ~Arena()
+ getCombatModifier(): T
+ show(): void
--
&lt;&lt;friend&gt;&gt; operator&lt;&lt;(std::ostream&amp;, const Arena&amp;): std::ostream&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>783</x>
      <y>360</y>
      <w>126</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
LocationFactory
--
+ LocationFactory()
+ ~LocationFactory()
+ Path createPath()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1107</x>
      <y>36</y>
      <w>396</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>template=typename: T, Tag, Operations
&lt;&lt;class&gt;&gt;
CosTypes
--
- value_: T
--
+ SafeType()
+ SafeType(T)
+ SafeType(const SafeType&amp;)
+ SafeType(SafeType&amp;&amp;)
+ SafeType&amp; operator=(const SafeType&amp;)
+ SafeType&amp; operator=(SafeType&amp;&amp;)
+ virtual ~SafeType()
+ get(): T
+ set(T&amp;&amp;): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>18</x>
      <y>342</y>
      <w>369</w>
      <h>414</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
Hero
--
- heroName_: std::string
- health_: HP
- attack_: ATT
- defence_: DEF
- inventoryList_: std::list&lt;GearVariant&gt;
- weapon_: Gear&lt;ATT&gt;
- armour_: Gear&lt;DEF&gt;
--
+ Hero()
+ Hero(std::string, HP, ATT, DEF)
+ ~Hero()
+ getHealth(): HP
+ getAttack(): ATT
+ getDefence(): DEF
+ getName(): std::string
+ setHealth(HP): void
+ setAttack(ATT): void
+ setDefence(DEF): void
+ addGearToInventory: void
+ changeGear(uint): void
+ dropGear(uint): void
+ setGear(GearVariant): void
+ show(): void
+ showStats(): void
+ showInventory: bool
--
&lt;&lt;friend&gt;&gt; operator&lt;&lt;(std::ostream&amp;, const Hero&amp;): std::ostream&amp;


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>657</x>
      <y>45</y>
      <w>378</w>
      <h>198</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
PathOfDestiny
--
- locationFactory_: LocationFactory
- opponentFactory_: OpponentFactory
- currentLocation_: std::variant&lt;Arena&lt;DEF&gt;, Arena&lt;ATT&gt;, Path&gt;
- newLocation_: std::variant&lt;Arena&lt;DEF&gt;, Arena&lt;ATT&gt;, Path&gt;
- hero_: Hero
--
+ PathOfDestiny()
+ PathOfDestiny(Hero)
+ ~PathOfDestiny()
+ gameLogic(): void
+ movement(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>189</x>
      <y>297</y>
      <w>675</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0;730.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>837</x>
      <y>234</y>
      <w>27</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>837</x>
      <y>297</y>
      <w>612</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>660.0;70.0;660.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>837</x>
      <y>486</y>
      <w>243</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>250.0;70.0;250.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>612</x>
      <y>441</y>
      <w>252</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;60.0;260.0;60.0;260.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>180</x>
      <y>747</y>
      <w>342</w>
      <h>153</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0;360.0;80.0;360.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>405</x>
      <y>810</y>
      <w>630</w>
      <h>234</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;440.0;10.0;440.0;240.0;680.0;240.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1197</x>
      <y>846</y>
      <w>243</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0;250.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>1863</w>
      <h>1152</h>
    </coordinates>
    <panel_attributes>cd Path of Destiny</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1458</x>
      <y>72</y>
      <w>378</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;namespace&gt;&gt;
Action
--
+ combat(Arena&lt;DEF&gt;, std::unique_ptr&lt;Opponent&gt;, Hero&amp;): void
+ combat(Arena&lt;DEF&gt;, std::unique_ptr&lt;Opponent&gt;, Hero&amp;): void
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
